<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation=
       "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

  <!-- プレースホルダ -->
  <import resource="classpath:common/PlaceHolderConfig.xml" />

  <!-- ===================== マネージャ定義 ===================== -->
  <!-- 一段目のマネージャ -->
  <bean id="jobManager" class="jp.terasoluna.fw.batch.restart.JobContextRestorer">
    <property name="jobRestartTableHandler" ref="JobRestartTableHandler" />
    <property name="jobManager" ref="delegatedJobManager" />
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>

  <bean id="delegatedJobManager" parent="baseManager">
    <property name="name" value="chunkTransactionJobManager" />
    <property name="collector" ref="collector" />
    <property name="workQueueFactory">
      <bean class="${workQueueFactory.class}">
        <property name="workerExecutorService" ref="workerExecutorService" />
        <property name="queueLength" ref="chunkQueueLength" />
        <property name="queueProcessor" ref="RestartChunkTransactionQueueProcessor" />
      </bean>
    </property>
    <!-- ジョブ前処理 -->
    <property name="preProcessor" ref="jobPreProcessor" />
    <!-- ジョブ後処理 -->
    <property name="postProcessor" ref="jobPostProcessor" />
  </bean>

  <!-- ジョブ前処理 -->
  <bean id="jobPreProcessor" parent="transactionalSupportProcessor">
    <property name="supportProcessor" ref="restartJobPreProcessor" />
  </bean>
  <bean id="restartJobPreProcessor" class="jp.terasoluna.fw.batch.restart.RestartPreProcessor">
    <property name="jobRestartTableHandler" ref="JobRestartTableHandler" />
    <property name="preProcessor">
      <bean parent="transactionalStandardSupportProcessor">
        <property name="supportProcessorName" ref="jobPreProcessorName" />
        <property name="supportLogicList" ref="jobPreLogicList" />
      </bean>
    </property>
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>

  <!-- ジョブ後処理 -->
  <bean id="jobPostProcessor" parent="transactionalSupportProcessor">
    <property name="supportProcessor" ref="delegatedJobPostProcessor" />
  </bean>
  <bean id="delegatedJobPostProcessor" class="jp.terasoluna.fw.batch.restart.RestartPostProcessor">
    <property name="jobRestartTableHandler" ref="JobRestartTableHandler" />
    <property name="postProcessor" ref="subStandardSupportProcessor" />
    <property name="supportLogicList" ref="jobPostLogicList" />
    <property name="sqlKey" value="jobRestart.DELETE_JOB_RESTART_CLEAR" />
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>
  <bean id="subStandardSupportProcessor" parent="transactionalStandardSupportProcessor">
    <property name="supportProcessorName" ref="jobPostProcessorName" />
    <property name="supportLogicList" ref="jobPostLogicList" />
  </bean>

  <!-- ===================== キュープロセッサ定義 ===================== -->
  <bean id="RestartChunkTransactionQueueProcessor" class="${RestartQueueProcessor.class}">
    <property name="name" value="chunkTransactionQueueProcessor" />
    <property name="worker" ref="chunkTransactionWorker" />
    <property name="restartWorker" ref="restartTransactionWorker" />
  </bean>

  <!-- ===================== ワーカ定義 ===================== -->
  <bean id="chunkTransactionWorker" class="jp.terasoluna.fw.batch.springsupport.transaction.TransactionalWorker">
    <property name="jobWorker" ref="restartPointUpdater" />
  </bean>
  <bean id="restartTransactionWorker" class="jp.terasoluna.fw.batch.springsupport.transaction.TransactionalWorker">
    <property name="jobWorker" ref="restartPointCloser" />
  </bean>
  
  <bean id="restartPointUpdater" class="jp.terasoluna.fw.batch.restart.RestartPointUpdater">
    <property name="jobWorker" ref="jobWorker" />
    <property name="jobRestartTableHandler" ref="JobRestartTableHandler" />
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>

  <bean id="restartPointCloser" class="jp.terasoluna.fw.batch.restart.RestartPointCloser">
    <property name="jobWorker" ref="jobWorker" />
    <property name="jobRestartTableHandler" ref="JobRestartTableHandler" />
    <property name="supportLogicList" ref="jobPostLogicList" />
    <property name="sqlKey" value="jobRestart.DELETE_JOB_RESTART_CLEAR" />
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>

  <bean id="jobWorker" class="jp.terasoluna.fw.batch.core.JobWorker">
    <property name="blogicExecutor" ref="blogicExecutor" />
    <property name="batchUpdateProcessor" ref="batchUpdateProcessor" />
    <property name="exceptionHandlerMap" ref="exceptionHandlerMap" />
    <property name="batchUpdateResultHandler" ref="batchUpdateResultHandler" />
    <property name="defaultJobExceptionHandler" ref="defaultJobExceptionHandler" />
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>

  <bean id="blogicExecutor" class="jp.terasoluna.fw.batch.core.StandardBLogicExecutor">
    <property name="blogic" ref="blogic" />
    <property name="blogicResultHandler" ref="TransactionalBLogicResultHandler" />
    <property name="exceptionHandlerMap" ref="exceptionHandlerMap" />
    <property name="defaultJobExceptionHandler" ref="defaultJobExceptionHandler" />
    <property name="throwableHandler" ref="throwableHandler" />
  </bean>

  <bean id="batchUpdateProcessor" class="jp.terasoluna.fw.batch.standard.StandardBatchUpdateProcessor">
    <property name="updateDAO" ref="updateDAO" />
  </bean>

  <!-- JobStatus設定 -->
  <bean id="MonitorableJobStatus" class="jp.terasoluna.fw.batch.monitor.MonitorableTransactionalJobStatus" scope="prototype">
    <property name="mbeanRegister" ref="MBeanRegister" />
    <property name="transactionManager" ref="transactionManager" />
    <property name="useSavepoint" ref="useSavepoint" />
    <property name="partitionNo" value="-1" />
  </bean>

  <bean id="JobStatus" class="jp.terasoluna.fw.batch.springsupport.transaction.TransactionalJobStatus" scope="prototype">
    <property name="transactionManager" ref="transactionManager" />
    <property name="useSavepoint" ref="useSavepoint" />
    <property name="partitionNo" value="-1" />
  </bean>

  <!-- ===================== スレッドプール作成時のサイズ ===================== -->
  <bean id="threadSize" class="java.lang.Integer">
    <constructor-arg value="1" />
  </bean>

  <!-- ===================== リスタート管理テーブル用ハンドラ ===================== -->
  <bean id="JobRestartTableHandler" class="jp.terasoluna.fw.batch.restart.JobRestartTableHandler">
    <property name="queryDAO" ref="queryDAO" />
    <property name="updateDAO" ref="updateDAO" />
    <property name="jobRestartInfoFactory" ref="JobRestartInfoFactory" />
  </bean>
  <bean id="JobRestartInfoFactory" class="jp.terasoluna.fw.batch.restart.StandardJobRestartInfoFactory" />
</beans>